(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{237:function(t,s,a){"use strict";a.r(s);var l=a(0),o=Object(l.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"slot-插槽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slot-插槽"}},[t._v("#")]),t._v(" Slot 插槽")]),t._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("slot插槽是组件的一块HTML模板，这个模板显示不显示由父组件决定，显示的位置由子组件自身决定，slot写在组件的什么位置则显示在什么位置。")])]),t._v(" "),a("h2",{attrs:{id:"分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("ul",[a("li",[t._v("单个插槽"),a("br"),t._v("\n= 默认插槽 = 匿名插槽")]),t._v(" "),a("li",[t._v("具名插槽"),a("br"),t._v("\nslot属性关联具名插槽，没有slot属性的html模板默认关联匿名插槽")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("slot是一块HTML模板，由父组件提供，子组件暴露出一个可以让父组件传入自定义内容的接口。")])])])}),[],!1,null,null,null);s.default=o.exports}}]);